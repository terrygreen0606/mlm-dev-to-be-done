{"ast":null,"code":"import _classCallCheck from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amit/Sites/mlm-frontend-dev/src/views/Calendar.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\"; // react component used to create a calendar with events on it\n\nimport BigCalendar from \"react-big-calendar\"; // dependency plugin for react-big-calendar\n\nimport moment from \"moment\"; // react component used to create alerts\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Card from \"components/Card/Card.jsx\";\nimport { events } from \"variables/Variables.jsx\";\nvar localizer = BigCalendar.momentLocalizer(moment);\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    _this.state = {\n      events: events,\n      alert: null\n    };\n    _this.hideAlert = _this.hideAlert.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"selectedEvent\",\n    value: function selectedEvent(event) {\n      alert(event.title);\n    }\n  }, {\n    key: \"addNewEventAlert\",\n    value: function addNewEventAlert(slotInfo) {\n      var _this2 = this;\n\n      this.setState({\n        alert: React.createElement(SweetAlert, {\n          input: true,\n          showCancel: true,\n          style: {\n            display: \"block\",\n            marginTop: \"-100px\"\n          },\n          title: \"Input something\",\n          onConfirm: function onConfirm(e) {\n            return _this2.addNewEvent(e, slotInfo);\n          },\n          onCancel: function onCancel() {\n            return _this2.hideAlert();\n          },\n          confirmBtnBsStyle: \"info\",\n          cancelBtnBsStyle: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })\n      });\n    }\n  }, {\n    key: \"addNewEvent\",\n    value: function addNewEvent(e, slotInfo) {\n      var newEvents = this.state.events;\n      newEvents.push({\n        title: e,\n        start: slotInfo.start,\n        end: slotInfo.end\n      });\n      this.setState({\n        alert: null,\n        events: newEvents\n      });\n    }\n  }, {\n    key: \"eventColors\",\n    value: function eventColors(event, start, end, isSelected) {\n      var backgroundColor = \"rbc-event-\";\n      event.color ? backgroundColor = backgroundColor + event.color : backgroundColor = backgroundColor + \"default\";\n      return {\n        className: backgroundColor\n      };\n    }\n  }, {\n    key: \"hideAlert\",\n    value: function hideAlert() {\n      this.setState({\n        alert: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.alert, React.createElement(Grid, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 10,\n        mdOffset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Card, {\n        calendar: true,\n        content: React.createElement(BigCalendar, {\n          selectable: true,\n          localizer: localizer,\n          events: this.state.events,\n          defaultView: \"month\",\n          scrollToTime: new Date(1970, 1, 1, 6),\n          defaultDate: new Date(),\n          onSelectEvent: function onSelectEvent(event) {\n            return _this3.selectedEvent(event);\n          },\n          onSelectSlot: function onSelectSlot(slotInfo) {\n            return _this3.addNewEventAlert(slotInfo);\n          },\n          eventPropGetter: this.eventColors,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/amit/Sites/mlm-frontend-dev/src/views/Calendar.jsx"],"names":["React","Component","Grid","Row","Col","BigCalendar","moment","SweetAlert","Card","events","localizer","momentLocalizer","Calendar","props","state","alert","hideAlert","bind","event","title","slotInfo","setState","display","marginTop","e","addNewEvent","newEvents","push","start","end","isSelected","backgroundColor","color","className","Date","selectedEvent","addNewEventAlert","eventColors"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// react component used to create a calendar with events on it\nimport BigCalendar from \"react-big-calendar\";\n// dependency plugin for react-big-calendar\nimport moment from \"moment\";\n// react component used to create alerts\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nimport Card from \"components/Card/Card.jsx\";\n\nimport { events } from \"variables/Variables.jsx\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: events,\n      alert: null\n    };\n    this.hideAlert = this.hideAlert.bind(this);\n  }\n  selectedEvent(event) {\n    alert(event.title);\n  }\n  addNewEventAlert(slotInfo) {\n    this.setState({\n      alert: (\n        <SweetAlert\n          input\n          showCancel\n          style={{ display: \"block\", marginTop: \"-100px\" }}\n          title=\"Input something\"\n          onConfirm={e => this.addNewEvent(e, slotInfo)}\n          onCancel={() => this.hideAlert()}\n          confirmBtnBsStyle=\"info\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      )\n    });\n  }\n  addNewEvent(e, slotInfo) {\n    var newEvents = this.state.events;\n    newEvents.push({\n      title: e,\n      start: slotInfo.start,\n      end: slotInfo.end\n    });\n    this.setState({\n      alert: null,\n      events: newEvents\n    });\n  }\n  eventColors(event, start, end, isSelected) {\n    var backgroundColor = \"rbc-event-\";\n    event.color\n      ? (backgroundColor = backgroundColor + event.color)\n      : (backgroundColor = backgroundColor + \"default\");\n    return {\n      className: backgroundColor\n    };\n  }\n  hideAlert() {\n    this.setState({\n      alert: null\n    });\n  }\n  render() {\n    return (\n      <div className=\"main-content\">\n        {this.state.alert}\n        <Grid fluid>\n          <Row>\n            <Col md={10} mdOffset={1}>\n              <Card\n                calendar\n                content={\n                  <BigCalendar\n                    selectable\n                    localizer={localizer}\n                    events={this.state.events}\n                    defaultView=\"month\"\n                    scrollToTime={new Date(1970, 1, 1, 6)}\n                    defaultDate={new Date()}\n                    onSelectEvent={event => this.selectedEvent(event)}\n                    onSelectSlot={slotInfo => this.addNewEventAlert(slotInfo)}\n                    eventPropGetter={this.eventColors}\n                  />\n                }\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}