{"ast":null,"code":"import _objectWithoutProperties from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amit/Sites/mlm-frontend-dev/src/components/CustomCheckbox/CustomCheckbox.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\nvar CustomCheckbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomCheckbox, _Component);\n\n  function CustomCheckbox(props) {\n    var _this;\n\n    _classCallCheck(this, CustomCheckbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomCheckbox).call(this, props));\n    _this.state = {\n      is_checked: props.isChecked ? true : false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CustomCheckbox, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        is_checked: !this.state.is_checked\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isChecked = _this$props.isChecked,\n          number = _this$props.number,\n          label = _this$props.label,\n          inline = _this$props.inline,\n          rest = _objectWithoutProperties(_this$props, [\"isChecked\", \"number\", \"label\", \"inline\"]);\n\n      var classes = inline !== undefined ? \"checkbox checkbox-inline\" : \"checkbox\";\n      return React.createElement(\"div\", {\n        className: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        id: number,\n        type: \"checkbox\",\n        onChange: this.handleClick,\n        checked: this.state.is_checked\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        htmlFor: number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, label));\n    }\n  }]);\n\n  return CustomCheckbox;\n}(Component);\n\nexport default CustomCheckbox;","map":{"version":3,"sources":["/Users/amit/Sites/mlm-frontend-dev/src/components/CustomCheckbox/CustomCheckbox.jsx"],"names":["React","Component","CustomCheckbox","props","state","is_checked","isChecked","handleClick","bind","setState","number","label","inline","rest","classes","undefined"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEF,KAAK,CAACG,SAAN,GAAkB,IAAlB,GAAyB;AAD1B,KAAb;AAGA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AALiB;AAMlB;;;;kCACa;AACZ,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA1B,OAAd;AACD;;;6BACQ;AAAA,wBAC+C,KAAKF,KADpD;AAAA,UACCG,SADD,eACCA,SADD;AAAA,UACYI,MADZ,eACYA,MADZ;AAAA,UACoBC,KADpB,eACoBA,KADpB;AAAA,UAC2BC,MAD3B,eAC2BA,MAD3B;AAAA,UACsCC,IADtC;;AAEP,UAAMC,OAAO,GACXF,MAAM,KAAKG,SAAX,GAAuB,0BAAvB,GAAoD,UADtD;AAEA,aACE;AAAK,QAAA,SAAS,EAAED,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAEJ,MADN;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAE,KAAKH,WAHjB;AAIE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC;AAJtB,SAKMQ,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAQE;AAAO,QAAA,OAAO,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBC,KAAzB,CARF,CADF;AAYD;;;;EA3B0BV,S;;AA8B7B,eAAeC,cAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\nclass CustomCheckbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_checked: props.isChecked ? true : false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({ is_checked: !this.state.is_checked });\n  }\n  render() {\n    const { isChecked, number, label, inline, ...rest } = this.props;\n    const classes =\n      inline !== undefined ? \"checkbox checkbox-inline\" : \"checkbox\";\n    return (\n      <div className={classes}>\n        <input\n          id={number}\n          type=\"checkbox\"\n          onChange={this.handleClick}\n          checked={this.state.is_checked}\n          {...rest}\n        />\n        <label htmlFor={number}>{label}</label>\n      </div>\n    );\n  }\n}\n\nexport default CustomCheckbox;\n"]},"metadata":{},"sourceType":"module"}