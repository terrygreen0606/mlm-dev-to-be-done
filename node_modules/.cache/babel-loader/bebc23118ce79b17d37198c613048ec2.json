{"ast":null,"code":"import _classCallCheck from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amit/Sites/mlm-frontend-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amit/Sites/mlm-frontend-dev/src/views/Forms/ValidationForms.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport Card from \"components/Card/Card.jsx\";\nimport Checkbox from \"components/CustomCheckbox/CustomCheckbox.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nvar ValidationForms =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ValidationForms, _Component);\n\n  function ValidationForms(props) {\n    var _this;\n\n    _classCallCheck(this, ValidationForms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ValidationForms).call(this, props));\n    _this.vForm = _this.refs.vForm;\n    _this.state = {\n      // Register\n      email: \"\",\n      password: \"\",\n      cfpassword: \"\",\n      emailError: null,\n      passwordError: null,\n      cfpasswordError: null,\n      /// Login\n      emailLogin: \"\",\n      emailErrorLogin: null,\n      passwordLogin: \"\",\n      passwordErrorLogin: null,\n      // Type\n      type_text: \"\",\n      type_textError: null,\n      type_email: \"\",\n      type_emailError: null,\n      type_number: \"\",\n      type_numberError: null,\n      type_url: \"\",\n      type_urlError: null,\n      type_source: \"\",\n      type_sourceError: null,\n      type_destination: \"\",\n      type_destinationError: null\n    };\n    return _this;\n  }\n\n  _createClass(ValidationForms, [{\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(event) {\n      this.setState({\n        email: event.target.value\n      });\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      re.test(event.target.value) === false ? this.setState({\n        emailError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Email is required and format should be \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"john@doe.com\"), \".\")\n      }) : this.setState({\n        emailError: null\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(event) {\n      this.setState({\n        password: event.target.value\n      });\n      event.target.value.length < 6 ? this.setState({\n        passwordError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"You must enter a password of at least 6 characters.\")\n      }) : this.setState({\n        passwordError: null\n      });\n    }\n  }, {\n    key: \"handleCfPasswordChange\",\n    value: function handleCfPasswordChange(event) {\n      this.setState({\n        cfpassword: event.target.value\n      });\n      event.target.value !== this.state.password ? this.setState({\n        cfpasswordError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Passwords do not match.\")\n      }) : this.setState({\n        cfpasswordError: null\n      });\n    }\n  }, {\n    key: \"handleRegisterSubmit\",\n    value: function handleRegisterSubmit() {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      re.test(this.state.email) === false ? this.setState({\n        emailError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Email is required and format should be \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"john@doe.com\"), \".\")\n      }) : this.setState({\n        emailError: null\n      });\n      this.state.password.length < 6 ? this.setState({\n        passwordError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"You must enter a password of at least 6 characters.\")\n      }) : this.setState({\n        passwordError: null\n      });\n      this.state.cfpassword !== this.state.password ? this.setState({\n        cfpasswordError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Passwords do not match.\")\n      }) : this.setState({\n        cfpasswordError: null\n      });\n    }\n  }, {\n    key: \"handleLoginEmail\",\n    value: function handleLoginEmail(event) {\n      this.setState({\n        emailLogin: event.target.value\n      });\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      re.test(event.target.value) === false ? this.setState({\n        emailErrorLogin: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Email is required and format should be \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"john@doe.com\"), \".\")\n      }) : this.setState({\n        emailErrorLogin: null\n      });\n    }\n  }, {\n    key: \"handleLoginPassword\",\n    value: function handleLoginPassword(event) {\n      this.setState({\n        passwordLogin: event.target.value\n      });\n      event.target.value.length < 6 ? this.setState({\n        passwordErrorLogin: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"You must enter a password of at least 6 characters.\")\n      }) : this.setState({\n        passwordErrorLogin: null\n      });\n    }\n  }, {\n    key: \"handleLoginSubmit\",\n    value: function handleLoginSubmit() {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      re.test(this.state.emailLogin) === false ? this.setState({\n        emailErrorLogin: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"Email is required and format should be \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"john@doe.com\"), \".\")\n      }) : this.setState({\n        emailErrorLogin: null\n      });\n      this.state.passwordLogin < 6 ? this.setState({\n        passwordErrorLogin: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"You must enter a password of at least 6 characters.\")\n      }) : this.setState({\n        passwordErrorLogin: null\n      });\n    }\n  }, {\n    key: \"handleTypeValidation\",\n    value: function handleTypeValidation() {\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      emailRex.test(this.state.type_email) === false ? this.setState({\n        type_emailError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"Email is required and format should be \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"john@doe.com\"), \".\")\n      }) : this.setState({\n        type_emailError: null\n      });\n      this.state.type_text === \"\" ? this.setState({\n        type_textError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"Text is required.\")\n      }) : this.setState({\n        type_textError: null\n      });\n      var digitRex = /^\\d+$/;\n      digitRex.test(this.state.type_number) === false ? this.setState({\n        type_numberError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"type_number has to be a number.\")\n      }) : this.setState({\n        type_numberError: null\n      });\n      var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n      urlRex.test(this.state.type_url) ? this.setState({\n        type_urlError: null\n      }) : this.setState({\n        type_urlError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Must be a valid URL!\")\n      });\n      this.state.type_source === \"\" ? this.setState({\n        type_sourceError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"IdSource is required\")\n      }) : this.setState({\n        type_sourceError: null\n      });\n      this.state.type_source === this.state.type_destination ? this.setState({\n        type_destinationError: null\n      }) : this.setState({\n        type_destinationError: React.createElement(\"small\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"IdSource mismatch!\")\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Register Form\",\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, \"Email adress: \", React.createElement(\"span\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, \"*\")), React.createElement(FormControl, {\n          type: \"text\",\n          name: \"email\",\n          onChange: function onChange(event) {\n            return _this2.handleEmailChange(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }), this.state.emailError), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Password: \", React.createElement(\"span\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, \"*\")), React.createElement(FormControl, {\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"off\",\n          onChange: function onChange(event) {\n            return _this2.handlePasswordChange(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }), this.state.passwordError), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, \"Confirm password: \", React.createElement(\"span\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, \"*\")), React.createElement(FormControl, {\n          type: \"password\",\n          name: \"cfpassword\",\n          autoComplete: \"off\",\n          onChange: function onChange(event) {\n            return _this2.handleCfPasswordChange(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }), this.state.cfpasswordError), React.createElement(\"div\", {\n          className: \"category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, \"*\"), \" Required fields\"), React.createElement(Button, {\n          bsStyle: \"info\",\n          fill: true,\n          pullRight: true,\n          onClick: this.handleRegisterSubmit.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \"Register\")),\n        legend: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          number: 1,\n          label: \"Subscribe to newsletter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Card, {\n        textCenter: true,\n        title: \"Login Form\",\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \"Email adress: \", React.createElement(\"span\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, \"*\")), React.createElement(FormControl, {\n          type: \"text\",\n          name: \"email\",\n          onChange: function onChange(event) {\n            return _this2.handleLoginEmail(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }), this.state.emailErrorLogin), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, \"Password: \", React.createElement(\"span\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, \"*\")), React.createElement(FormControl, {\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"off\",\n          onChange: function onChange(event) {\n            return _this2.handleLoginPassword(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }), this.state.passwordErrorLogin), React.createElement(\"div\", {\n          className: \"category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, \"*\"), \" Required fields\")),\n        ftTextCenter: true,\n        legend: React.createElement(Button, {\n          bsStyle: \"info\",\n          fill: true,\n          wd: true,\n          onClick: this.handleLoginSubmit.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, \"Login\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Form, {\n        horizontal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: React.createElement(\"legend\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, \"Type Validation\"),\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          controlId: \"formHorizontalRequiredText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(Col, {\n          componentClass: ControlLabel,\n          sm: 2,\n          smOffset: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, \"Required text\"), React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"text\",\n          name: \"type_text\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              type_text: event.target.value\n            });\n\n            event.target.value === \"\" ? _this2.setState({\n              type_textError: React.createElement(\"small\", {\n                className: \"text-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 370\n                },\n                __self: this\n              }, \"Text is required.\")\n            }) : _this2.setState({\n              type_textError: null\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }), this.state.type_textError)), React.createElement(FormGroup, {\n          controlId: \"formHorizontalEmail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, React.createElement(Col, {\n          componentClass: ControlLabel,\n          sm: 2,\n          smOffset: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, \"Email\"), React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"email\",\n          name: \"type_email\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              type_email: event.target.value\n            });\n\n            var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            emailRex.test(event.target.value) === false ? _this2.setState({\n              type_emailError: React.createElement(\"small\", {\n                className: \"text-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 395\n                },\n                __self: this\n              }, \"Email is required and format should be\", \" \", React.createElement(\"i\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 397\n                },\n                __self: this\n              }, \"john@doe.com\"), \".\")\n            }) : _this2.setState({\n              type_emailError: null\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }), this.state.type_emailError)), React.createElement(FormGroup, {\n          controlId: \"formHorizontalNumber\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }, React.createElement(Col, {\n          componentClass: ControlLabel,\n          sm: 2,\n          smOffset: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }, \"Number\"), React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"number\",\n          name: \"type_number\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              type_number: event.target.value\n            });\n\n            var digitRex = /^\\d+$/;\n            digitRex.test(event.target.value) === false ? _this2.setState({\n              type_numberError: React.createElement(\"small\", {\n                className: \"text-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 423\n                },\n                __self: this\n              }, \"type_number has to be a number.\")\n            }) : _this2.setState({\n              type_numberError: null\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }), this.state.type_numberError)), React.createElement(FormGroup, {\n          controlId: \"formHorizontalURL\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, React.createElement(Col, {\n          componentClass: ControlLabel,\n          sm: 2,\n          smOffset: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }, \"URL\"), React.createElement(Col, {\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"text\",\n          name: \"type_url\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              type_url: event.target.value\n            });\n\n            var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n            urlRex.test(event.target.value) ? _this2.setState({\n              type_urlError: null\n            }) : _this2.setState({\n              type_urlError: React.createElement(\"small\", {\n                className: \"text-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 449\n                },\n                __self: this\n              }, \"Must be a valid URL!\")\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }), this.state.type_urlError)), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, React.createElement(Col, {\n          componentClass: ControlLabel,\n          sm: 2,\n          smOffset: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, \"Equal to\"), React.createElement(Col, {\n          sm: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"text\",\n          name: \"type_source\",\n          placeholder: \"idSource\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              type_source: event.target.value\n            });\n\n            event.target.value === \"\" ? _this2.setState({\n              type_sourceError: React.createElement(\"small\", {\n                className: \"text-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 475\n                },\n                __self: this\n              }, \"IdSource is required\")\n            }) : _this2.setState({\n              type_sourceError: null\n            });\n            _this2.state.type_destination === event.target.value ? _this2.setState({\n              type_destinationError: null\n            }) : _this2.setState({\n              type_destinationError: React.createElement(\"small\", {\n                className: \"text-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 485\n                },\n                __self: this\n              }, \"IdSource mismatch!\")\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }), this.state.type_sourceError), React.createElement(Col, {\n          sm: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"text\",\n          name: \"type_destination\",\n          placeholder: \"idDestination\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              type_destination: event.target.value\n            });\n\n            _this2.state.type_source === event.target.value ? _this2.setState({\n              type_destinationError: null\n            }) : _this2.setState({\n              type_destinationError: React.createElement(\"small\", {\n                className: \"text-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 507\n                },\n                __self: this\n              }, \"IdSource mismatch!\")\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495\n          },\n          __self: this\n        }), this.state.type_destinationError))),\n        ftTextCenter: true,\n        legend: React.createElement(Button, {\n          fill: true,\n          bsStyle: \"info\",\n          onClick: this.handleTypeValidation.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521\n          },\n          __self: this\n        }, \"Validate Inputs\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ValidationForms;\n}(Component);\n\nexport default ValidationForms;","map":{"version":3,"sources":["/Users/amit/Sites/mlm-frontend-dev/src/views/Forms/ValidationForms.jsx"],"names":["React","Component","Grid","Row","Col","Form","FormGroup","FormControl","ControlLabel","Card","Checkbox","Button","ValidationForms","props","vForm","refs","state","email","password","cfpassword","emailError","passwordError","cfpasswordError","emailLogin","emailErrorLogin","passwordLogin","passwordErrorLogin","type_text","type_textError","type_email","type_emailError","type_number","type_numberError","type_url","type_urlError","type_source","type_sourceError","type_destination","type_destinationError","event","setState","target","value","re","test","length","emailRex","digitRex","urlRex","handleEmailChange","handlePasswordChange","handleCfPasswordChange","handleRegisterSubmit","bind","handleLoginEmail","handleLoginPassword","handleLoginSubmit","handleTypeValidation"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,YAPF,QAQO,iBARP;AAUA,OAAOC,IAAP,MAAiB,0BAAjB;AAEA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,MAAKC,IAAL,CAAUD,KAAvB;AACA,UAAKE,KAAL,GAAa;AACX;AACAC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,UAAU,EAAE,EAJD;AAKXC,MAAAA,UAAU,EAAE,IALD;AAMXC,MAAAA,aAAa,EAAE,IANJ;AAOXC,MAAAA,eAAe,EAAE,IAPN;AAQX;AACAC,MAAAA,UAAU,EAAE,EATD;AAUXC,MAAAA,eAAe,EAAE,IAVN;AAWXC,MAAAA,aAAa,EAAE,EAXJ;AAYXC,MAAAA,kBAAkB,EAAE,IAZT;AAaX;AACAC,MAAAA,SAAS,EAAE,EAdA;AAeXC,MAAAA,cAAc,EAAE,IAfL;AAgBXC,MAAAA,UAAU,EAAE,EAhBD;AAiBXC,MAAAA,eAAe,EAAE,IAjBN;AAkBXC,MAAAA,WAAW,EAAE,EAlBF;AAmBXC,MAAAA,gBAAgB,EAAE,IAnBP;AAoBXC,MAAAA,QAAQ,EAAE,EApBC;AAqBXC,MAAAA,aAAa,EAAE,IArBJ;AAsBXC,MAAAA,WAAW,EAAE,EAtBF;AAuBXC,MAAAA,gBAAgB,EAAE,IAvBP;AAwBXC,MAAAA,gBAAgB,EAAE,EAxBP;AAyBXC,MAAAA,qBAAqB,EAAE;AAzBZ,KAAb;AAHiB;AA8BlB;;;;sCACiBC,K,EAAO;AACvB,WAAKC,QAAL,CAAc;AACZvB,QAAAA,KAAK,EAAEsB,KAAK,CAACE,MAAN,CAAaC;AADR,OAAd;AAGA,UAAIC,EAAE,GAAG,uJAAT;AACAA,MAAAA,EAAE,CAACC,IAAH,CAAQL,KAAK,CAACE,MAAN,CAAaC,KAArB,MAAgC,KAAhC,GACI,KAAKF,QAAL,CAAc;AACZpB,QAAAA,UAAU,EACR;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADzC;AAFU,OAAd,CADJ,GAQI,KAAKoB,QAAL,CAAc;AAAEpB,QAAAA,UAAU,EAAE;AAAd,OAAd,CARJ;AASD;;;yCACoBmB,K,EAAO;AAC1B,WAAKC,QAAL,CAAc;AACZtB,QAAAA,QAAQ,EAAEqB,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGAH,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBG,MAAnB,GAA4B,CAA5B,GACI,KAAKL,QAAL,CAAc;AACZnB,QAAAA,aAAa,EACX;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAQI,KAAKmB,QAAL,CAAc;AAAEnB,QAAAA,aAAa,EAAE;AAAjB,OAAd,CARJ;AASD;;;2CACsBkB,K,EAAO;AAC5B,WAAKC,QAAL,CAAc;AACZrB,QAAAA,UAAU,EAAEoB,KAAK,CAACE,MAAN,CAAaC;AADb,OAAd;AAGAH,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,KAAK1B,KAAL,CAAWE,QAAlC,GACI,KAAKsB,QAAL,CAAc;AACZlB,QAAAA,eAAe,EACb;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAMI,KAAKkB,QAAL,CAAc;AAAElB,QAAAA,eAAe,EAAE;AAAnB,OAAd,CANJ;AAOD;;;2CACsB;AACrB,UAAIqB,EAAE,GAAG,uJAAT;AACAA,MAAAA,EAAE,CAACC,IAAH,CAAQ,KAAK5B,KAAL,CAAWC,KAAnB,MAA8B,KAA9B,GACI,KAAKuB,QAAL,CAAc;AACZpB,QAAAA,UAAU,EACR;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADzC;AAFU,OAAd,CADJ,GAQI,KAAKoB,QAAL,CAAc;AAAEpB,QAAAA,UAAU,EAAE;AAAd,OAAd,CARJ;AASA,WAAKJ,KAAL,CAAWE,QAAX,CAAoB2B,MAApB,GAA6B,CAA7B,GACI,KAAKL,QAAL,CAAc;AACZnB,QAAAA,aAAa,EACX;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAQI,KAAKmB,QAAL,CAAc;AAAEnB,QAAAA,aAAa,EAAE;AAAjB,OAAd,CARJ;AASA,WAAKL,KAAL,CAAWG,UAAX,KAA0B,KAAKH,KAAL,CAAWE,QAArC,GACI,KAAKsB,QAAL,CAAc;AACZlB,QAAAA,eAAe,EACb;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAMI,KAAKkB,QAAL,CAAc;AAAElB,QAAAA,eAAe,EAAE;AAAnB,OAAd,CANJ;AAOD;;;qCACgBiB,K,EAAO;AACtB,WAAKC,QAAL,CAAc;AACZjB,QAAAA,UAAU,EAAEgB,KAAK,CAACE,MAAN,CAAaC;AADb,OAAd;AAGA,UAAIC,EAAE,GAAG,uJAAT;AACAA,MAAAA,EAAE,CAACC,IAAH,CAAQL,KAAK,CAACE,MAAN,CAAaC,KAArB,MAAgC,KAAhC,GACI,KAAKF,QAAL,CAAc;AACZhB,QAAAA,eAAe,EACb;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADzC;AAFU,OAAd,CADJ,GAQI,KAAKgB,QAAL,CAAc;AAAEhB,QAAAA,eAAe,EAAE;AAAnB,OAAd,CARJ;AASD;;;wCACmBe,K,EAAO;AACzB,WAAKC,QAAL,CAAc;AACZf,QAAAA,aAAa,EAAEc,KAAK,CAACE,MAAN,CAAaC;AADhB,OAAd;AAGAH,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBG,MAAnB,GAA4B,CAA5B,GACI,KAAKL,QAAL,CAAc;AACZd,QAAAA,kBAAkB,EAChB;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAQI,KAAKc,QAAL,CAAc;AAAEd,QAAAA,kBAAkB,EAAE;AAAtB,OAAd,CARJ;AASD;;;wCACmB;AAClB,UAAIiB,EAAE,GAAG,uJAAT;AACAA,MAAAA,EAAE,CAACC,IAAH,CAAQ,KAAK5B,KAAL,CAAWO,UAAnB,MAAmC,KAAnC,GACI,KAAKiB,QAAL,CAAc;AACZhB,QAAAA,eAAe,EACb;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADzC;AAFU,OAAd,CADJ,GAQI,KAAKgB,QAAL,CAAc;AAAEhB,QAAAA,eAAe,EAAE;AAAnB,OAAd,CARJ;AASA,WAAKR,KAAL,CAAWS,aAAX,GAA2B,CAA3B,GACI,KAAKe,QAAL,CAAc;AACZd,QAAAA,kBAAkB,EAChB;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAQI,KAAKc,QAAL,CAAc;AAAEd,QAAAA,kBAAkB,EAAE;AAAtB,OAAd,CARJ;AASD;;;2CACsB;AACrB,UAAIoB,QAAQ,GAAG,uJAAf;AACAA,MAAAA,QAAQ,CAACF,IAAT,CAAc,KAAK5B,KAAL,CAAWa,UAAzB,MAAyC,KAAzC,GACI,KAAKW,QAAL,CAAc;AACZV,QAAAA,eAAe,EACb;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADzC;AAFU,OAAd,CADJ,GAQI,KAAKU,QAAL,CAAc;AAAEV,QAAAA,eAAe,EAAE;AAAnB,OAAd,CARJ;AASA,WAAKd,KAAL,CAAWW,SAAX,KAAyB,EAAzB,GACI,KAAKa,QAAL,CAAc;AACZZ,QAAAA,cAAc,EACZ;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAMI,KAAKY,QAAL,CAAc;AAAEZ,QAAAA,cAAc,EAAE;AAAlB,OAAd,CANJ;AAOA,UAAImB,QAAQ,GAAG,OAAf;AACAA,MAAAA,QAAQ,CAACH,IAAT,CAAc,KAAK5B,KAAL,CAAWe,WAAzB,MAA0C,KAA1C,GACI,KAAKS,QAAL,CAAc;AACZR,QAAAA,gBAAgB,EACd;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAQI,KAAKQ,QAAL,CAAc;AAAER,QAAAA,gBAAgB,EAAE;AAApB,OAAd,CARJ;AASA,UAAIgB,MAAM,GAAG,iFAAb;AACAA,MAAAA,MAAM,CAACJ,IAAP,CAAY,KAAK5B,KAAL,CAAWiB,QAAvB,IACI,KAAKO,QAAL,CAAc;AAAEN,QAAAA,aAAa,EAAE;AAAjB,OAAd,CADJ,GAEI,KAAKM,QAAL,CAAc;AACZN,QAAAA,aAAa,EACX;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CAFJ;AAOA,WAAKlB,KAAL,CAAWmB,WAAX,KAA2B,EAA3B,GACI,KAAKK,QAAL,CAAc;AACZJ,QAAAA,gBAAgB,EACd;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CADJ,GAMI,KAAKI,QAAL,CAAc;AAAEJ,QAAAA,gBAAgB,EAAE;AAApB,OAAd,CANJ;AAOA,WAAKpB,KAAL,CAAWmB,WAAX,KAA2B,KAAKnB,KAAL,CAAWqB,gBAAtC,GACI,KAAKG,QAAL,CAAc;AAAEF,QAAAA,qBAAqB,EAAE;AAAzB,OAAd,CADJ,GAEI,KAAKE,QAAL,CAAc;AACZF,QAAAA,qBAAqB,EACnB;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,OAAd,CAFJ;AAOD;;;6BACQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACgB;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADhB,CADF,EAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,mBAAI,MAAI,CAACU,iBAAL,CAAuBV,KAAvB,CAAJ;AAAA,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EASG,KAAKvB,KAAL,CAAWI,UATd,CADF,EAYE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACY;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADZ,CADF,EAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,YAAY,EAAC,KAHf;AAIE,UAAA,QAAQ,EAAE,kBAAAmB,KAAK;AAAA,mBAAI,MAAI,CAACW,oBAAL,CAA0BX,KAA1B,CAAJ;AAAA,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAUG,KAAKvB,KAAL,CAAWK,aAVd,CAZF,EAwBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACoB;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADpB,CADF,EAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,YAFP;AAGE,UAAA,YAAY,EAAC,KAHf;AAIE,UAAA,QAAQ,EAAE,kBAAAkB,KAAK;AAAA,mBAAI,MAAI,CAACY,sBAAL,CAA4BZ,KAA5B,CAAJ;AAAA,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAUG,KAAKvB,KAAL,CAAWM,eAVd,CAxBF,EAoCE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,qBApCF,EAuCE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,MAFN;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,OAAO,EAAE,KAAK8B,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvCF,CAHJ;AAoDE,QAAA,MAAM,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAE,CAAlB;AAAqB,UAAA,KAAK,EAAC,yBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CArDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EA+DE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACgB;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADhB,CADF,EAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAE,kBAAAd,KAAK;AAAA,mBAAI,MAAI,CAACe,gBAAL,CAAsBf,KAAtB,CAAJ;AAAA,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EASG,KAAKvB,KAAL,CAAWQ,eATd,CADF,EAYE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACY;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADZ,CADF,EAIE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,YAAY,EAAC,KAHf;AAIE,UAAA,QAAQ,EAAE,kBAAAe,KAAK;AAAA,mBAAI,MAAI,CAACgB,mBAAL,CAAyBhB,KAAzB,CAAJ;AAAA,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAUG,KAAKvB,KAAL,CAAWU,kBAVd,CAZF,EAwBE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,qBAxBF,CAJJ;AAiCE,QAAA,YAAY,MAjCd;AAkCE,QAAA,MAAM,EACJ,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,MAFN;AAGE,UAAA,EAAE,MAHJ;AAIE,UAAA,OAAO,EAAE,KAAK8B,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CA/DF,EAgHE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADT;AAEE,QAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,cAAc,EAAE7C,YAArB;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,QAAQ,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAIE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,WAFP;AAGE,UAAA,QAAQ,EAAE,kBAAA+B,KAAK,EAAI;AACjB,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEb,cAAAA,SAAS,EAAEY,KAAK,CAACE,MAAN,CAAaC;AAA1B,aAAd;;AACAH,YAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAAvB,GACI,MAAI,CAACF,QAAL,CAAc;AACZZ,cAAAA,cAAc,EACZ;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,aAAd,CADJ,GAQI,MAAI,CAACY,QAAL,CAAc;AAAEZ,cAAAA,cAAc,EAAE;AAAlB,aAAd,CARJ;AASD,WAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAiBG,KAAKZ,KAAL,CAAWY,cAjBd,CAJF,CADF,EAyBE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,cAAc,EAAEpB,YAArB;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,QAAQ,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,YAFP;AAGE,UAAA,QAAQ,EAAE,kBAAA+B,KAAK,EAAI;AACjB,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEX,cAAAA,UAAU,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAA3B,aAAd;;AACA,gBAAII,QAAQ,GAAG,uJAAf;AACAA,YAAAA,QAAQ,CAACF,IAAT,CAAcL,KAAK,CAACE,MAAN,CAAaC,KAA3B,MAAsC,KAAtC,GACI,MAAI,CAACF,QAAL,CAAc;AACZV,cAAAA,eAAe,EACb;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACyC,GADzC,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF;AAFU,aAAd,CADJ,GASI,MAAI,CAACU,QAAL,CAAc;AAAEV,cAAAA,eAAe,EAAE;AAAnB,aAAd,CATJ;AAUD,WAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAmBG,KAAKd,KAAL,CAAWc,eAnBd,CAJF,CAzBF,EAmDE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,cAAc,EAAEtB,YAArB;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,QAAQ,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,QAAQ,EAAE,kBAAA+B,KAAK,EAAI;AACjB,YAAA,MAAI,CAACC,QAAL,CAAc;AACZT,cAAAA,WAAW,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AADd,aAAd;;AAGA,gBAAIK,QAAQ,GAAG,OAAf;AACAA,YAAAA,QAAQ,CAACH,IAAT,CAAcL,KAAK,CAACE,MAAN,CAAaC,KAA3B,MAAsC,KAAtC,GACI,MAAI,CAACF,QAAL,CAAc;AACZR,cAAAA,gBAAgB,EACd;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,aAAd,CADJ,GAQI,MAAI,CAACQ,QAAL,CAAc;AAAER,cAAAA,gBAAgB,EAAE;AAApB,aAAd,CARJ;AASD,WAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAoBG,KAAKhB,KAAL,CAAWgB,gBApBd,CAJF,CAnDF,EA8EE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,cAAc,EAAExB,YAArB;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,QAAQ,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,QAAQ,EAAE,kBAAA+B,KAAK,EAAI;AACjB,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEP,cAAAA,QAAQ,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAzB,aAAd;;AACA,gBAAIM,MAAM,GAAG,iFAAb;AACAA,YAAAA,MAAM,CAACJ,IAAP,CAAYL,KAAK,CAACE,MAAN,CAAaC,KAAzB,IACI,MAAI,CAACF,QAAL,CAAc;AAAEN,cAAAA,aAAa,EAAE;AAAjB,aAAd,CADJ,GAEI,MAAI,CAACM,QAAL,CAAc;AACZN,cAAAA,aAAa,EACX;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,aAAd,CAFJ;AASD,WAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAkBG,KAAKlB,KAAL,CAAWkB,aAlBd,CAJF,CA9EF,EAuGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,cAAc,EAAE1B,YAArB;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,QAAQ,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,QAAQ,EAAE,kBAAA+B,KAAK,EAAI;AACjB,YAAA,MAAI,CAACC,QAAL,CAAc;AACZL,cAAAA,WAAW,EAAEI,KAAK,CAACE,MAAN,CAAaC;AADd,aAAd;;AAGAH,YAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAAvB,GACI,MAAI,CAACF,QAAL,CAAc;AACZJ,cAAAA,gBAAgB,EACd;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,aAAd,CADJ,GAQI,MAAI,CAACI,QAAL,CAAc;AAAEJ,cAAAA,gBAAgB,EAAE;AAApB,aAAd,CARJ;AASA,YAAA,MAAI,CAACpB,KAAL,CAAWqB,gBAAX,KAAgCE,KAAK,CAACE,MAAN,CAAaC,KAA7C,GACI,MAAI,CAACF,QAAL,CAAc;AAAEF,cAAAA,qBAAqB,EAAE;AAAzB,aAAd,CADJ,GAEI,MAAI,CAACE,QAAL,CAAc;AACZF,cAAAA,qBAAqB,EACnB;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,aAAd,CAFJ;AASD,WA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EA6BG,KAAKtB,KAAL,CAAWoB,gBA7Bd,CAJF,EAmCE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,kBAFP;AAGE,UAAA,WAAW,EAAC,eAHd;AAIE,UAAA,QAAQ,EAAE,kBAAAG,KAAK,EAAI;AACjB,YAAA,MAAI,CAACC,QAAL,CAAc;AACZH,cAAAA,gBAAgB,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADnB,aAAd;;AAGA,YAAA,MAAI,CAAC1B,KAAL,CAAWmB,WAAX,KAA2BI,KAAK,CAACE,MAAN,CAAaC,KAAxC,GACI,MAAI,CAACF,QAAL,CAAc;AAAEF,cAAAA,qBAAqB,EAAE;AAAzB,aAAd,CADJ,GAEI,MAAI,CAACE,QAAL,CAAc;AACZF,cAAAA,qBAAqB,EACnB;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,aAAd,CAFJ;AASD,WAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAoBG,KAAKtB,KAAL,CAAWsB,qBApBd,CAnCF,CAvGF,CAHJ;AAsKE,QAAA,YAAY,MAtKd;AAuKE,QAAA,MAAM,EACJ,oBAAC,MAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,OAAO,EAAC,MAFV;AAGE,UAAA,OAAO,EAAE,KAAKmB,oBAAL,CAA0BJ,IAA1B,CAA+B,IAA/B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAxKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAhHF,CADF,CADF,CADF;AA4SD;;;;EAvf2BpD,S;;AA0f9B,eAAeW,eAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\n\nimport Card from \"components/Card/Card.jsx\";\n\nimport Checkbox from \"components/CustomCheckbox/CustomCheckbox.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nclass ValidationForms extends Component {\n  constructor(props) {\n    super(props);\n    this.vForm = this.refs.vForm;\n    this.state = {\n      // Register\n      email: \"\",\n      password: \"\",\n      cfpassword: \"\",\n      emailError: null,\n      passwordError: null,\n      cfpasswordError: null,\n      /// Login\n      emailLogin: \"\",\n      emailErrorLogin: null,\n      passwordLogin: \"\",\n      passwordErrorLogin: null,\n      // Type\n      type_text: \"\",\n      type_textError: null,\n      type_email: \"\",\n      type_emailError: null,\n      type_number: \"\",\n      type_numberError: null,\n      type_url: \"\",\n      type_urlError: null,\n      type_source: \"\",\n      type_sourceError: null,\n      type_destination: \"\",\n      type_destinationError: null\n    };\n  }\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(event.target.value) === false\n      ? this.setState({\n          emailError: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailError: null });\n  }\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n    event.target.value.length < 6\n      ? this.setState({\n          passwordError: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordError: null });\n  }\n  handleCfPasswordChange(event) {\n    this.setState({\n      cfpassword: event.target.value\n    });\n    event.target.value !== this.state.password\n      ? this.setState({\n          cfpasswordError: (\n            <small className=\"text-danger\">Passwords do not match.</small>\n          )\n        })\n      : this.setState({ cfpasswordError: null });\n  }\n  handleRegisterSubmit() {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(this.state.email) === false\n      ? this.setState({\n          emailError: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailError: null });\n    this.state.password.length < 6\n      ? this.setState({\n          passwordError: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordError: null });\n    this.state.cfpassword !== this.state.password\n      ? this.setState({\n          cfpasswordError: (\n            <small className=\"text-danger\">Passwords do not match.</small>\n          )\n        })\n      : this.setState({ cfpasswordError: null });\n  }\n  handleLoginEmail(event) {\n    this.setState({\n      emailLogin: event.target.value\n    });\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(event.target.value) === false\n      ? this.setState({\n          emailErrorLogin: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailErrorLogin: null });\n  }\n  handleLoginPassword(event) {\n    this.setState({\n      passwordLogin: event.target.value\n    });\n    event.target.value.length < 6\n      ? this.setState({\n          passwordErrorLogin: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordErrorLogin: null });\n  }\n  handleLoginSubmit() {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(this.state.emailLogin) === false\n      ? this.setState({\n          emailErrorLogin: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ emailErrorLogin: null });\n    this.state.passwordLogin < 6\n      ? this.setState({\n          passwordErrorLogin: (\n            <small className=\"text-danger\">\n              You must enter a password of at least 6 characters.\n            </small>\n          )\n        })\n      : this.setState({ passwordErrorLogin: null });\n  }\n  handleTypeValidation() {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    emailRex.test(this.state.type_email) === false\n      ? this.setState({\n          type_emailError: (\n            <small className=\"text-danger\">\n              Email is required and format should be <i>john@doe.com</i>.\n            </small>\n          )\n        })\n      : this.setState({ type_emailError: null });\n    this.state.type_text === \"\"\n      ? this.setState({\n          type_textError: (\n            <small className=\"text-danger\">Text is required.</small>\n          )\n        })\n      : this.setState({ type_textError: null });\n    var digitRex = /^\\d+$/;\n    digitRex.test(this.state.type_number) === false\n      ? this.setState({\n          type_numberError: (\n            <small className=\"text-danger\">\n              type_number has to be a number.\n            </small>\n          )\n        })\n      : this.setState({ type_numberError: null });\n    var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n    urlRex.test(this.state.type_url)\n      ? this.setState({ type_urlError: null })\n      : this.setState({\n          type_urlError: (\n            <small className=\"text-danger\">Must be a valid URL!</small>\n          )\n        });\n    this.state.type_source === \"\"\n      ? this.setState({\n          type_sourceError: (\n            <small className=\"text-danger\">IdSource is required</small>\n          )\n        })\n      : this.setState({ type_sourceError: null });\n    this.state.type_source === this.state.type_destination\n      ? this.setState({ type_destinationError: null })\n      : this.setState({\n          type_destinationError: (\n            <small className=\"text-danger\">IdSource mismatch!</small>\n          )\n        });\n  }\n  render() {\n    return (\n      <div className=\"main-content\">\n        <Grid fluid>\n          <Row>\n            <Col md={6}>\n              <form>\n                <Card\n                  title=\"Register Form\"\n                  content={\n                    <div>\n                      <FormGroup>\n                        <ControlLabel>\n                          Email adress: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"text\"\n                          name=\"email\"\n                          onChange={event => this.handleEmailChange(event)}\n                        />\n                        {this.state.emailError}\n                      </FormGroup>\n                      <FormGroup>\n                        <ControlLabel>\n                          Password: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"password\"\n                          name=\"password\"\n                          autoComplete=\"off\"\n                          onChange={event => this.handlePasswordChange(event)}\n                        />\n                        {this.state.passwordError}\n                      </FormGroup>\n                      <FormGroup>\n                        <ControlLabel>\n                          Confirm password: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"password\"\n                          name=\"cfpassword\"\n                          autoComplete=\"off\"\n                          onChange={event => this.handleCfPasswordChange(event)}\n                        />\n                        {this.state.cfpasswordError}\n                      </FormGroup>\n                      <div className=\"category\">\n                        <span className=\"star\">*</span> Required fields\n                      </div>\n                      <Button\n                        bsStyle=\"info\"\n                        fill\n                        pullRight\n                        onClick={this.handleRegisterSubmit.bind(this)}\n                      >\n                        Register\n                      </Button>\n                    </div>\n                  }\n                  legend={\n                    <div>\n                      <Checkbox number={1} label=\"Subscribe to newsletter\" />\n                    </div>\n                  }\n                />\n              </form>\n            </Col>\n            <Col md={6}>\n              <form>\n                <Card\n                  textCenter\n                  title=\"Login Form\"\n                  content={\n                    <div>\n                      <FormGroup>\n                        <ControlLabel>\n                          Email adress: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"text\"\n                          name=\"email\"\n                          onChange={event => this.handleLoginEmail(event)}\n                        />\n                        {this.state.emailErrorLogin}\n                      </FormGroup>\n                      <FormGroup>\n                        <ControlLabel>\n                          Password: <span className=\"star\">*</span>\n                        </ControlLabel>\n                        <FormControl\n                          type=\"password\"\n                          name=\"password\"\n                          autoComplete=\"off\"\n                          onChange={event => this.handleLoginPassword(event)}\n                        />\n                        {this.state.passwordErrorLogin}\n                      </FormGroup>\n                      <div className=\"category\">\n                        <span className=\"star\">*</span> Required fields\n                      </div>\n                    </div>\n                  }\n                  ftTextCenter\n                  legend={\n                    <Button\n                      bsStyle=\"info\"\n                      fill\n                      wd\n                      onClick={this.handleLoginSubmit.bind(this)}\n                    >\n                      Login\n                    </Button>\n                  }\n                />\n              </form>\n            </Col>\n            <Col md={12}>\n              <Form horizontal>\n                <Card\n                  title={<legend>Type Validation</legend>}\n                  content={\n                    <div>\n                      <FormGroup controlId=\"formHorizontalRequiredText\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Required text\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_text\"\n                            onChange={event => {\n                              this.setState({ type_text: event.target.value });\n                              event.target.value === \"\"\n                                ? this.setState({\n                                    type_textError: (\n                                      <small className=\"text-danger\">\n                                        Text is required.\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_textError: null });\n                            }}\n                          />\n                          {this.state.type_textError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup controlId=\"formHorizontalEmail\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Email\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"email\"\n                            name=\"type_email\"\n                            onChange={event => {\n                              this.setState({ type_email: event.target.value });\n                              var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                              emailRex.test(event.target.value) === false\n                                ? this.setState({\n                                    type_emailError: (\n                                      <small className=\"text-danger\">\n                                        Email is required and format should be{\" \"}\n                                        <i>john@doe.com</i>.\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_emailError: null });\n                            }}\n                          />\n                          {this.state.type_emailError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup controlId=\"formHorizontalNumber\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Number\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"number\"\n                            name=\"type_number\"\n                            onChange={event => {\n                              this.setState({\n                                type_number: event.target.value\n                              });\n                              var digitRex = /^\\d+$/;\n                              digitRex.test(event.target.value) === false\n                                ? this.setState({\n                                    type_numberError: (\n                                      <small className=\"text-danger\">\n                                        type_number has to be a number.\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_numberError: null });\n                            }}\n                          />\n                          {this.state.type_numberError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup controlId=\"formHorizontalURL\">\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          URL\n                        </Col>\n                        <Col sm={6}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_url\"\n                            onChange={event => {\n                              this.setState({ type_url: event.target.value });\n                              var urlRex = /[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/gi;\n                              urlRex.test(event.target.value)\n                                ? this.setState({ type_urlError: null })\n                                : this.setState({\n                                    type_urlError: (\n                                      <small className=\"text-danger\">\n                                        Must be a valid URL!\n                                      </small>\n                                    )\n                                  });\n                            }}\n                          />\n                          {this.state.type_urlError}\n                        </Col>\n                      </FormGroup>\n                      <FormGroup>\n                        <Col componentClass={ControlLabel} sm={2} smOffset={2}>\n                          Equal to\n                        </Col>\n                        <Col sm={3}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_source\"\n                            placeholder=\"idSource\"\n                            onChange={event => {\n                              this.setState({\n                                type_source: event.target.value\n                              });\n                              event.target.value === \"\"\n                                ? this.setState({\n                                    type_sourceError: (\n                                      <small className=\"text-danger\">\n                                        IdSource is required\n                                      </small>\n                                    )\n                                  })\n                                : this.setState({ type_sourceError: null });\n                              this.state.type_destination === event.target.value\n                                ? this.setState({ type_destinationError: null })\n                                : this.setState({\n                                    type_destinationError: (\n                                      <small className=\"text-danger\">\n                                        IdSource mismatch!\n                                      </small>\n                                    )\n                                  });\n                            }}\n                          />\n                          {this.state.type_sourceError}\n                        </Col>\n                        <Col sm={3}>\n                          <FormControl\n                            type=\"text\"\n                            name=\"type_destination\"\n                            placeholder=\"idDestination\"\n                            onChange={event => {\n                              this.setState({\n                                type_destination: event.target.value\n                              });\n                              this.state.type_source === event.target.value\n                                ? this.setState({ type_destinationError: null })\n                                : this.setState({\n                                    type_destinationError: (\n                                      <small className=\"text-danger\">\n                                        IdSource mismatch!\n                                      </small>\n                                    )\n                                  });\n                            }}\n                          />\n                          {this.state.type_destinationError}\n                        </Col>\n                      </FormGroup>\n                    </div>\n                  }\n                  ftTextCenter\n                  legend={\n                    <Button\n                      fill\n                      bsStyle=\"info\"\n                      onClick={this.handleTypeValidation.bind(this)}\n                    >\n                      Validate Inputs\n                    </Button>\n                  }\n                />\n              </Form>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ValidationForms;\n"]},"metadata":{},"sourceType":"module"}